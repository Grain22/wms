package grain.config;

import org.apache.ibatis.session.SqlSessionFactory;
import org.apache.ibatis.type.JdbcType;
import org.mybatis.spring.SqlSessionFactoryBean;
import org.mybatis.spring.SqlSessionTemplate;
import org.mybatis.spring.annotation.MapperScan;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.boot.context.properties.ConfigurationProperties;
import org.springframework.boot.jdbc.DataSourceBuilder;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.core.io.support.PathMatchingResourcePatternResolver;
import org.springframework.jdbc.datasource.DataSourceTransactionManager;

import javax.sql.DataSource;
import java.util.Objects;

/**
 * @author wulifu
 */
@Configuration
@MapperScan(value = "grain.dao",sqlSessionTemplateRef = "informixSqlSessionTemplate")
public class InformixDataSourceConfig {
    @Bean(name = "informixDataSource")
    @ConfigurationProperties(prefix = "spring.datasource.informix")
    @Primary
    public DataSource myDataSource() {
        return DataSourceBuilder.create().build();
    }

    @Bean(name = "informixSqlSessionFactory")
    @Primary
    public SqlSessionFactory mySqlSessionFactory(@Qualifier("informixDataSource") DataSource dataSource) throws Exception {
        SqlSessionFactoryBean bean = new SqlSessionFactoryBean();
        bean.setDataSource(dataSource);

        bean.setTypeAliasesPackage("grain.entity");
        bean.setMapperLocations(new PathMatchingResourcePatternResolver().getResources("classpath:/dao/mapper/**/*.xml"));

        Objects.requireNonNull(bean.getObject()).getConfiguration().setJdbcTypeForNull(JdbcType.VARCHAR);
        return bean.getObject();
    }

    @Bean(name = "informixTransactionManager")
    @Primary
    public DataSourceTransactionManager myTransactionManager(@Qualifier("informixDataSource") DataSource dataSource) {
        return new DataSourceTransactionManager(dataSource);
    }

    @Bean(name = "informixSqlSessionTemplate")
    @Primary
    public SqlSessionTemplate mySqlSessionTemplate(@Qualifier("informixSqlSessionFactory") SqlSessionFactory sqlSessionFactory) {
        return new SqlSessionTemplate(sqlSessionFactory);
    }
}